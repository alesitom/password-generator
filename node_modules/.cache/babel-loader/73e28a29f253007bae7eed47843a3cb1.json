{"ast":null,"code":"var _jsxFileName = \"/home/alesitom/Ale/password-generator/src/components/container/slider/Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './Slider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = props => {\n  _s();\n\n  const {\n    step,\n    min,\n    max,\n    value,\n    defaultLength,\n    onChangeValue\n  } = props;\n  const rangeRef = useRef();\n  let [range, setRange] = useState();\n  const activeRangeColor = '#4aa1f3';\n  const rangeBackground = '#d7dcdf';\n\n  const handleChange = max => e => {\n    onChangeValue(e);\n    const value = e.target.value;\n    setRange(value);\n    const progress = value / max * 100 + '%';\n    const newBackgroundStyle = `linear-gradient(90deg, ${activeRangeColor} 0% ${progress}, ${rangeBackground} ${progress} 100%)`;\n    rangeRef.current.style.background = newBackgroundStyle;\n  };\n\n  if (range !== defaultLength || !range) {\n    range = defaultLength;\n  }\n\n  const progressValue = range;\n  const progress = progressValue / max * 100 + '%';\n  const styleInput = {\n    background: `linear-gradient(90deg, ${activeRangeColor} 0% ${progress}, ${rangeBackground} ${progress} 100%)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: rangeRef,\n        className: \"range-slider\",\n        type: \"range\",\n        step: step,\n        min: min,\n        max: max,\n        value: value,\n        onChange: handleChange(max),\n        style: styleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"range-slider-value\",\n        children: progressValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Slider, \"e4dqP5QRjH+3YWaI8to6Pnp8sfQ=\");\n\n_c = Slider;\nSlider.propTypes = {\n  step: PropTypes.number.isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  defaultLength: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  onChangeValue: PropTypes.func.isRequired\n};\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/home/alesitom/Ale/password-generator/src/components/container/slider/Slider.js"],"names":["React","useState","useRef","PropTypes","Slider","props","step","min","max","value","defaultLength","onChangeValue","rangeRef","range","setRange","activeRangeColor","rangeBackground","handleChange","e","target","progress","newBackgroundStyle","current","style","background","progressValue","styleInput","propTypes","number","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,aAAzB;AAAwCC,IAAAA;AAAxC,MAA0DN,KAAhE;AAEA,QAAMO,QAAQ,GAAGV,MAAM,EAAvB;AACA,MAAI,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAhC;AAEA,QAAMc,gBAAgB,GAAG,SAAzB;AACA,QAAMC,eAAe,GAAG,SAAxB;;AAEA,QAAMC,YAAY,GAAGT,GAAG,IAAIU,CAAC,IAAI;AAC7BP,IAAAA,aAAa,CAACO,CAAD,CAAb;AACA,UAAMT,KAAK,GAAGS,CAAC,CAACC,MAAF,CAASV,KAAvB;AACAK,IAAAA,QAAQ,CAACL,KAAD,CAAR;AACA,UAAMW,QAAQ,GAAIX,KAAK,GAAGD,GAAT,GAAgB,GAAhB,GAAsB,GAAvC;AACA,UAAMa,kBAAkB,GAAI,0BAAyBN,gBAAiB,OAAMK,QAAS,KAAIJ,eAAgB,IAAGI,QAAS,QAArH;AACAR,IAAAA,QAAQ,CAACU,OAAT,CAAiBC,KAAjB,CAAuBC,UAAvB,GAAoCH,kBAApC;AACH,GAPD;;AASA,MAAIR,KAAK,KAAKH,aAAV,IAA2B,CAACG,KAAhC,EAAuC;AACnCA,IAAAA,KAAK,GAAGH,aAAR;AACH;;AAED,QAAMe,aAAa,GAAGZ,KAAtB;AACA,QAAMO,QAAQ,GAAIK,aAAa,GAAGjB,GAAjB,GAAwB,GAAxB,GAA8B,GAA/C;AACA,QAAMkB,UAAU,GAAG;AACfF,IAAAA,UAAU,EAAG,0BAAyBT,gBAAiB,OAAMK,QAAS,KAAIJ,eAAgB,IAAGI,QAAS;AADvF,GAAnB;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AACI,QAAA,GAAG,EAAER,QADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,IAAI,EAAEN,IAJV;AAKI,QAAA,GAAG,EAAEC,GALT;AAMI,QAAA,GAAG,EAAEC,GANT;AAOI,QAAA,KAAK,EAAEC,KAPX;AAQI,QAAA,QAAQ,EAAEQ,YAAY,CAACT,GAAD,CAR1B;AASI,QAAA,KAAK,EAAEkB;AATX;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA,kBAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9CD;;GAAMrB,M;;KAAAA,M;AAgDNA,MAAM,CAACuB,SAAP,GAAmB;AACfrB,EAAAA,IAAI,EAAEH,SAAS,CAACyB,MAAV,CAAiBC,UADR;AAEftB,EAAAA,GAAG,EAAEJ,SAAS,CAACyB,MAAV,CAAiBC,UAFP;AAGfrB,EAAAA,GAAG,EAAEL,SAAS,CAACyB,MAAV,CAAiBC,UAHP;AAIfnB,EAAAA,aAAa,EAAEP,SAAS,CAACyB,MAAV,CAAiBC,UAJjB;AAKfpB,EAAAA,KAAK,EAAEN,SAAS,CAACyB,MAAV,CAAiBC,UALT;AAMflB,EAAAA,aAAa,EAAER,SAAS,CAAC2B,IAAV,CAAeD;AANf,CAAnB;AASA,eAAezB,MAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Slider.css';\n\nconst Slider = props => {\n    const { step, min, max, value, defaultLength, onChangeValue } = props;\n\n    const rangeRef = useRef();\n    let [range, setRange] = useState();\n\n    const activeRangeColor = '#4aa1f3';\n    const rangeBackground = '#d7dcdf';\n\n    const handleChange = max => e => {\n        onChangeValue(e);\n        const value = e.target.value;\n        setRange(value);\n        const progress = (value / max) * 100 + '%';\n        const newBackgroundStyle = `linear-gradient(90deg, ${activeRangeColor} 0% ${progress}, ${rangeBackground} ${progress} 100%)`;\n        rangeRef.current.style.background = newBackgroundStyle;\n    }\n\n    if (range !== defaultLength || !range) {\n        range = defaultLength;\n    }\n\n    const progressValue = range;\n    const progress = (progressValue / max) * 100 + '%';\n    const styleInput = {\n        background: `linear-gradient(90deg, ${activeRangeColor} 0% ${progress}, ${rangeBackground} ${progress} 100%)`\n    }\n\n    return (\n        <div className=\"slider-container\">\n            <div className=\"slider\">\n                <input \n                    ref={rangeRef}\n                    className=\"range-slider\"\n                    type=\"range\"\n                    step={step}\n                    min={min}\n                    max={max}\n                    value={value}\n                    onChange={handleChange(max)}\n                    style={styleInput}\n                />\n                <span className=\"range-slider-value\">{progressValue}</span>\n            </div>\n        </div>\n    )\n}\n\nSlider.propTypes = {\n    step: PropTypes.number.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    defaultLength: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n    onChangeValue: PropTypes.func.isRequired,\n}\n\nexport default Slider"]},"metadata":{},"sourceType":"module"}